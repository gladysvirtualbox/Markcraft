# Generated by Django 5.0.4 on 2024-04-16 15:36

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AddressZW',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, help_text='Name of the address (optional).', max_length=400, null=True)),
                ('address_line_1', models.CharField(help_text='First line of the address.', max_length=255)),
                ('address_line_2', models.CharField(blank=True, help_text='Second line of the address (optional).', max_length=255)),
                ('city', models.CharField(help_text='City of the address.', max_length=100)),
                ('province', models.CharField(help_text='Province of the address.', max_length=100)),
                ('postal_code', models.CharField(help_text='Postal code of the address.', max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(help_text='Unique code for the course.', max_length=20, unique=True)),
                ('name', models.CharField(help_text='Name of the course.', max_length=120)),
                ('description', models.TextField(blank=True, help_text='Description of the course.')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date and time when the course was created.')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date and time when the course was last updated.')),
            ],
        ),
        migrations.CreateModel(
            name='Stream',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of the stream.', max_length=100)),
                ('start_date', models.DateField(help_text='Start date of the stream.')),
                ('end_date', models.DateField(help_text='End date of the stream.')),
            ],
        ),
        migrations.CreateModel(
            name='Program',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of the program.', max_length=120)),
                ('description', models.TextField(blank=True, help_text='Description of the program.')),
                ('courses', models.ManyToManyField(help_text='Courses included in the program.', to='base.course')),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student_id', models.CharField(help_text='Student ID.', max_length=100)),
                ('first_name', models.CharField(help_text='First name of the student.', max_length=100)),
                ('last_name', models.CharField(help_text='Last name of the student.', max_length=100)),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female')], help_text='Gender of the student.', max_length=1)),
                ('national_id', models.CharField(help_text='National ID of the student.', max_length=20, unique=True)),
                ('phone_number', models.CharField(help_text='Phone number of the student.', max_length=15)),
                ('parent_name', models.CharField(help_text="Name of the student's parent/guardian.", max_length=100)),
                ('parent_phone_number', models.CharField(help_text="Phone number of the student's parent/guardian.", max_length=15)),
                ('address', models.ForeignKey(help_text='Address of the student.', on_delete=django.db.models.deletion.CASCADE, to='base.addresszw')),
                ('class_year', models.ForeignKey(blank=True, help_text='Class year/stream of the student.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='base.stream')),
                ('program', models.ForeignKey(blank=True, help_text='Program in which the student is enrolled.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='base.program')),
            ],
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_of_birth', models.DateField(help_text='Date of birth of the teacher.')),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female')], help_text='Gender of the teacher.', max_length=1)),
                ('national_id', models.CharField(help_text='National ID of the teacher.', max_length=20, unique=True)),
                ('phone_number', models.CharField(help_text='Phone number of the teacher.', max_length=20)),
                ('qualifications', models.TextField(help_text='Qualifications of the teacher.')),
                ('years_of_experience', models.PositiveIntegerField(help_text='Years of experience of the teacher.')),
                ('address', models.ForeignKey(blank=True, help_text='Address of the teacher.', null=True, on_delete=django.db.models.deletion.CASCADE, to='base.addresszw')),
                ('user', models.OneToOneField(help_text='User associated with the teacher.', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Mark',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mark', models.DecimalField(decimal_places=2, help_text='Mark recorded for the student.', max_digits=5)),
                ('recorded_at', models.DateTimeField(auto_now_add=True, help_text='Date and time when the mark was recorded.')),
                ('course', models.ForeignKey(help_text='Course associated with the mark.', on_delete=django.db.models.deletion.CASCADE, to='base.course')),
                ('student', models.ForeignKey(help_text='Student associated with the mark.', on_delete=django.db.models.deletion.CASCADE, to='base.student')),
                ('recorded_by', models.ForeignKey(help_text='Teacher who recorded the mark.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='base.teacher')),
            ],
        ),
    ]
